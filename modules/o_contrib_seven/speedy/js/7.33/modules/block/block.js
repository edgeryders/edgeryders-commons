(function($){Drupal.behaviors.blockSettingsSummary={attach:function(context){if(typeof jQuery.fn.drupalSetSummary=="undefined"){return}$("fieldset#edit-path",context).drupalSetSummary(function(context){if(!$('textarea[name="pages"]',context).val()){return Drupal.t("Not restricted")}else{return Drupal.t("Restricted to certain pages")}});$("fieldset#edit-node-type",context).drupalSetSummary(function(context){var vals=[];$('input[type="checkbox"]:checked',context).each(function(){vals.push($.trim($(this).next("label").text()))});if(!vals.length){vals.push(Drupal.t("Not restricted"))}return vals.join(", ")});$("fieldset#edit-role",context).drupalSetSummary(function(context){var vals=[];$('input[type="checkbox"]:checked',context).each(function(){vals.push($.trim($(this).next("label").text()))});if(!vals.length){vals.push(Drupal.t("Not restricted"))}return vals.join(", ")});$("fieldset#edit-user",context).drupalSetSummary(function(context){var $radio=$('input[name="custom"]:checked',context);if($radio.val()==0){return Drupal.t("Not customizable")}else{return $radio.next("label").text()}})}};Drupal.behaviors.blockDrag={attach:function(context,settings){if(typeof Drupal.tableDrag=="undefined"||typeof Drupal.tableDrag.blocks=="undefined"){return}var table=$("table#blocks");var tableDrag=Drupal.tableDrag.blocks;tableDrag.row.prototype.onSwap=function(swappedRow){checkEmptyRegions(table,this)};Drupal.theme.tableDragChangedWarning=function(){return'<div class="messages warning">'+Drupal.theme("tableDragChangedMarker")+" "+Drupal.t("The changes to these blocks will not be saved until the <em>Save blocks</em> button is clicked.")+"</div>"};tableDrag.onDrop=function(){dragObject=this;var regionRow=$(dragObject.rowObject.element).prevAll("tr.region-message").get(0);var regionName=regionRow.className.replace(/([^ ]+[ ]+)*region-([^ ]+)-message([ ]+[^ ]+)*/,"$2");var regionField=$("select.block-region-select",dragObject.rowObject.element);if($("option[value="+regionName+"]",regionField).length==0){alert(Drupal.t("The block cannot be placed in this region."));regionField.change()}else if($(dragObject.rowObject.element).prev("tr").is(".region-message")){var weightField=$("select.block-weight",dragObject.rowObject.element);var oldRegionName=weightField[0].className.replace(/([^ ]+[ ]+)*block-weight-([^ ]+)([ ]+[^ ]+)*/,"$2");if(!regionField.is(".block-region-"+regionName)){regionField.removeClass("block-region-"+oldRegionName).addClass("block-region-"+regionName);weightField.removeClass("block-weight-"+oldRegionName).addClass("block-weight-"+regionName);regionField.val(regionName)}}};$("select.block-region-select",context).once("block-region-select",function(){$(this).change(function(event){var row=$(this).closest("tr");var select=$(this);tableDrag.rowObject=new tableDrag.row(row);table.find(".region-"+select[0].value+"-message").nextUntil(".region-message").last().before(row);checkEmptyRegions(table,row);select.get(0).blur()})});var checkEmptyRegions=function(table,rowObject){$("tr.region-message",table).each(function(){if($(this).prev("tr").get(0)==rowObject.element){if(rowObject.method!="keyboard"||rowObject.direction=="down"){rowObject.swap("after",this)}}if($(this).next("tr").is(":not(.draggable)")||$(this).next("tr").length==0){$(this).removeClass("region-populated").addClass("region-empty")}else if($(this).is(".region-empty")){$(this).removeClass("region-empty").addClass("region-populated")}})}}}})(jQuery);